
В произвольном месте создал папку F:\git_bot. Имя можно произвольное (лучше используйте латиницу).
Кликните правой кнопкой мыши в папке git_bot и выберите «Git Bash Here». Откроется консоль
Введите команду
$ git clone https://github.com/DanilMazurkin/FogstreamBot

Появится 
F:\git_bot\FogstreamBot
больше в F:\git_bot\ не появится ничего

Содержимое папки F:\git_bot\FogstreamBot
02.03.2021  21:43    <DIR>          appadmin
02.03.2021  21:43    <DIR>          appserver
02.03.2021  21:43        22 262 628 debug.log
27.02.2021  13:57               684 manage.py
02.03.2021  13:42             2 082 README.md
02.03.2021  13:42                62 requirements.txt
27.02.2021  13:57    <DIR>          server
02.03.2021  21:43    <DIR>          telegrambot
02.03.2021  13:42    <DIR>          документация Волужев
02.03.2021  22:21    <DIR>          Документация к боту (Петряков)


из git_bot запускаем virtualenv в CMD
F:\git_bot>virtualenv bot_env
Появились новые файлы в git_bot
Содержимое папки F:\git_bot
02.03.2021  23:48                 0 0.2.2
02.03.2021  23:48                 0 activate.bat
02.03.2021  23:48    <DIR>          bot_env
02.03.2021  23:48                 0 cd
02.03.2021  23:48                 0 dir
02.03.2021  21:43    <DIR>          FogstreamBot
02.03.2021  23:48                 0 Lib
02.03.2021  23:48                 0 md
02.03.2021  23:48                 0 Scripts
02.03.2021  23:48                 0 virtualenv

запускаем virtualenv
F:\git_bot\bot_env\Scripts>activate

возвращаемся в FogstreamBot и запускаем requirements.txt, где указаны нужные версии ПО
(bot_env) F:\git_bot>cd FogstreamBot
(bot_env) F:\git_bot\FogstreamBot>pip install -r requirements.txt
Collecting asgiref==3.3.1
  Using cached asgiref-3.3.1-py3-none-any.whl (19 kB)
Collecting certifi==2020.12.5
  Using cached certifi-2020.12.5-py2.py3-none-any.whl (147 kB)
Collecting chardet==4.0.0
  Using cached chardet-4.0.0-py2.py3-none-any.whl (178 kB)
Collecting Cython==0.29.22
  Using cached Cython-0.29.22-cp37-cp37m-win_amd64.whl (1.6 MB)
Collecting Django==3.1.6
  Using cached Django-3.1.6-py3-none-any.whl (7.8 MB)
Collecting django-crispy-forms==1.11.0
  Using cached django_crispy_forms-1.11.0-py3-none-any.whl (108 kB)
Collecting djangorestframework==3.12.2
  Using cached djangorestframework-3.12.2-py3-none-any.whl (957 kB)
Collecting idna==2.10
  Using cached idna-2.10-py2.py3-none-any.whl (58 kB)
Collecting psycopg2-binary==2.8.6
  Using cached psycopg2_binary-2.8.6-cp37-cp37m-win_amd64.whl (1.1 MB)
Collecting pyTelegramBotAPI==3.7.6
  Using cached pyTelegramBotAPI-3.7.6-py3-none-any.whl
Collecting pytz==2021.1
  Using cached pytz-2021.1-py2.py3-none-any.whl (510 kB)
Collecting requests==2.25.1
  Using cached requests-2.25.1-py2.py3-none-any.whl (61 kB)
Collecting sqlparse==0.4.1
  Using cached sqlparse-0.4.1-py3-none-any.whl (42 kB)
Collecting urllib3==1.26.3
  Using cached urllib3-1.26.3-py2.py3-none-any.whl (137 kB)
Installing collected packages: urllib3, sqlparse, pytz, idna, chardet, certifi, asgiref, requests, Django, pyTelegramBotAPI, psyco
pg2-binary, djangorestframework, django-crispy-forms, Cython
Successfully installed Cython-0.29.22 Django-3.1.6 asgiref-3.3.1 certifi-2020.12.5 chardet-4.0.0 django-crispy-forms-1.11.0 django
restframework-3.12.2 idna-2.10 psycopg2-binary-2.8.6 pyTelegramBotAPI-3.7.6 pytz-2021.1 requests-2.25.1 sqlparse-0.4.1 urllib3-1.2
6.3

При установке могут возникнуть проблемы, тут прийдется смотреть, чем они вызваны.
В даном случае из requirements.txt убрал vedis==0.7.1

В данном случае для хранения данных используем PostgreSQL, в котором создана пустая база bot_db
Для работы с PostgreSQL надо установить переменные окружения
В Windows их можно прописать в Панель управления - Система - Дополнительные параметры системы - Переменные среды

Переменные окружения для сервера:
DBNAME=<имя_базы_данных>
DBUSER=<имя_пользователя_данных>
PASS=<пароль_базы_данных>
HOST=<хост_сервера>

пример
DBNAME=bot_db
DBUSER=postgres
PASS=postgressql
HOST=127.0.0.1	   
	
Подготавливаем миграцию
(bot_env) F:\git_bot\FogstreamBot>python manage.py makemigrations
asyncio      DEBUG    Using selector: SelectSelector
No changes detected

проводим миграцию
(bot_env) F:\git_bot\FogstreamBot>python manage.py migrate

создаём суперпользователя
(bot_env) F:\git_bot\FogstreamBot>python manage.py createsuperuser
asyncio      DEBUG    Using selector: SelectSelector
Username: admin
Email address: можно пропустить, нажав Enter
Password: admin
Password (again): admin
The password is too similar to the username.
This password is too short. It must contain at least 8 characters.
This password is too common.
Bypass password validation and create user anyway? [y/N]: y
Superuser created successfully.

запускаем сервер
(bot_env) F:\git_bot\FogstreamBot>python manage.py runserver

в браузере вводим
127.0.0.1:8000/bot/login

вводим имя: admin
вводим пароль: admin